@page "/books"
@page "/books/{id:int}"
@inject iBukuservice Bukuservice


@if (Id == null)
{
    <PageTitle>Create Data Buku</PageTitle>
    <h3>Tambah Data Buku</h3>
}
else
{
    <PageTitle>Edit @book.Judul_buku</PageTitle>
    <h3>Edit @book.Judul_buku</h3>

}

<EditForm Model="book" OnSubmit="HandleSubmit">
    <div>
        <label for="idbuku">Judul Buku</label>
        <InputText id="idbuku" @bind-Value="book.Judul_buku" class="form-control"></InputText>
    </div>
    <div>
        <label for="idbuku">Penerbit</label>
        <InputText id="idbuku" @bind-Value="book.Penerbit" class="form-control"></InputText>
    </div>
    <div>
        <label>Genre</label>
        <InputSelect @bind-Value="book.Genre_id" class="form-select">
            @foreach (var genre in Bukuservice.genres)
            {
                <option value="@genre.Nama_Genre">@genre.Nama_Genre</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    Buku book = new Buku { Genre = new Genre() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save Data" : "Update Data";
        await Bukuservice.GetDataBuku();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            //Tambah
        }
        else
        {
            book = await Bukuservice.GetSingleBuku((int)Id);
        }
    }
    async Task HandleSubmit()
    {
        
    }
}
